plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.netflix.dgs.codegen' version '7.0.3'
}

group = 'dev.poporo.course'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

ext {
    set('netflixDgsVersion', "10.0.4")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // DGS
    implementation platform("com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:${netflixDgsVersion}")
    implementation 'com.netflix.graphql.dgs:graphql-dgs-extended-scalars'
    implementation 'com.netflix.graphql.dgs:graphql-dgs-spring-graphql-starter'
    implementation 'com.netflix.graphql.dgs:graphql-dgs-subscription-types'
    testImplementation 'com.netflix.graphql.dgs:graphql-dgs-spring-graphql-starter-test'

    implementation 'net.datafaker:datafaker:2.4.2'
}

dependencyManagement {
    imports {
        mavenBom "com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:${netflixDgsVersion}"
    }
}

generateJava {
    generateClient = true
    typeMapping = [
            "Date": "java.time.LocalDate",
            "NonNegativeInt": "java.lang.Integer",
            "Url": "java.net.URL",
            "DateTime": "java.time.OffsetDateTime"
    ]
}

tasks.named('test') {
    useJUnitPlatform()
}
